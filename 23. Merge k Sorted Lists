# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None


# what if it's not a linked list. it's a list?
class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        minheap = []
        dummy = ListNode(0)
        cur = dummy
        import heapq
        
        for node in lists:
            if node:
                heapq.heappush(minheap, (node.val, node))
                
        while minheap:
            val, head = heapq.heappop(minheap)
            cur.next = head
            cur = cur.next
            
            if head.next:
                heapq.heappush(minheap, (head.next.val, head.next))
            
        return dummy.next
            
